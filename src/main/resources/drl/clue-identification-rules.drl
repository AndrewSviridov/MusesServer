package MusesDrl


global eu.musesproject.server.eventprocessor.correlator.global.StatusGlobal StatusGlobal
global eu.musesproject.server.eventprocessor.correlator.global.Rt2aeGlobal Rt2aeGlobal

import eu.musesproject.server.eventprocessor.correlator.model.owl.AdditionalProtection
import eu.musesproject.server.eventprocessor.correlator.model.owl.AddNoteEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.AccessRequest
import eu.musesproject.server.eventprocessor.correlator.model.owl.DeviceProtectionEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.EmailEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.Event
import eu.musesproject.server.eventprocessor.correlator.model.owl.FileObserverEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.ConnectivityEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.Clue;
import eu.musesproject.server.eventprocessor.correlator.model.owl.PackageObserverEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.VirusFoundEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.ChangeSecurityPropertyEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.USBDeviceConnectedEvent

import eu.musesproject.server.eventprocessor.correlator.model.owl.AppObserverEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.OpenFileEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.UserBehaviorEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.VirusCleanedEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.SensorAppEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.PasswordEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.LocationEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.SecurityIncidentEvent


import eu.musesproject.server.eventprocessor.util.Constants
import eu.musesproject.server.risktrust.ThreatOntology
import java.util.ArrayList
import java.util.Date
import java.util.StringTokenizer

declare Event
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare AccessRequest
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare ConnectivityEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare FileObserverEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare PackageObserverEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare Clue
	@role( event )
	@timestamp ( event_date )
	@expires (60m)
end

declare DeviceProtectionEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare AdditionalProtection
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare EmailEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare VirusFoundEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare ChangeSecurityPropertyEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare AddNoteEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare AppObserverEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare OpenFileEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare UserBehaviorEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare VirusCleanedEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare SensorAppEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare PasswordEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare LocationEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare SecurityIncidentEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

function boolean unsafeStorage(String name){
	System.out.println("Safe storage input:"+name);
	boolean result = true;
	if (name.contains("cryptonite")){
		result = false;
	}
	System.out.println("Unsafe storage result:"+result);

	return result;
}


rule "Clue-identification-00000"
	no-loop true
	salience 65000
	dialect "mvel"
	when
		e: FileObserverEvent(event=="open_asset", resourceType=="sensitive")
		conn: ConnectivityEvent(bluetoothConnected=="TRUE",deviceId==e.deviceId)
		not Clue(name=="Bluetooth enabled might turn into data leakage problems",timestamp==e.timestamp)
	then
		
		StatusGlobal.log("3.A new clue has been identified, associated to event:"+e.getTimestamp());
		StatusGlobal.log(conn.getBluetoothConnected());		
		StatusGlobal.log("Identifier:"+e.getTimestamp());
		Clue clue = Rt2aeGlobal.composeClue(e,"Bluetooth enabled might turn into data leakage problems",ThreatOntology.DATA_LEAKAGE);
		StatusGlobal.log("CREATED CLUE:"+clue.getTimestamp());
		clue.setUsername(e.getUsername());
		clue.setDeviceId(e.getDeviceId());
		insert(clue);
	end
	
	rule "Clue-identification-00001"
	no-loop true
	salience 65000
	dialect "mvel"
	when
		e: FileObserverEvent(event=="open_asset", path matches ".*onfidential.*")
		conn: ConnectivityEvent(wifiEncryption not matches ".*WPA2.*",deviceId==e.deviceId)
		//conn: ConnectivityEvent(wifiEncryption!="WPA2",deviceId==e.deviceId)
		not Clue(name=="UnsecureWifi:Encryption without WPA2 protocol might be unsecure",timestamp==e.timestamp)
	then
		
		StatusGlobal.log("3.A new clue has been identified, associated to event:"+e.getTimestamp());
		//StatusGlobal.log(conn.getBluetoothConnected());		
		StatusGlobal.log("Identifier:"+e.getTimestamp());
		Clue clue = Rt2aeGlobal.composeClue(e,"UnsecureWifi:Encryption without WPA2 protocol might be unsecure", ThreatOntology.DATA_LEAKAGE);
		StatusGlobal.log("CREATED CLUE:"+clue.getTimestamp());
		clue.setUsername(e.getUsername());
		clue.setDeviceId(e.getDeviceId());
		insert(clue);
	end

	rule "Clue-Antivirus not running"
	no-loop true
	salience 65000
	dialect "mvel"
	when
		e: ChangeSecurityPropertyEvent(isTrustedAntivirusInstalled==false)
		not AccessRequest(event=="Antivirus not running")

	then
		StatusGlobal.log("3.A new clue has been identified, associated to event:"+e.getTimestamp());
		StatusGlobal.log("Identifier:"+e.getTimestamp());
		Clue clue = Rt2aeGlobal.composeClue(e,"Antivirus is not running", ThreatOntology.DATA_LEAKAGE);
		StatusGlobal.log("CREATED CLUE:"+clue.getTimestamp());
		//clue.setUsername(e.getUsername());
		//clue.setDeviceId(e.getDeviceId());
		insert(clue);
	end	
	
	
	rule "Device-security-state-00001"
	no-loop true
	salience 65000
	dialect "mvel"
	when
		e: PackageObserverEvent(installedApps not matches ".*Kaspersky.*")

	then
		
		StatusGlobal.log("4.A new device security state has been identified: ANTIVIRUS NOT RUNNING, associated to event:"+e.getTimestamp());
		StatusGlobal.log(e.getInstalledApps());		
		StatusGlobal.log("Identifier:"+e.getTimestamp());
		Rt2aeGlobal.deviceSecurityStateChange(e,"Antivirus is not running", ThreatOntology.MALICIOUS_MISUSE);
		//retract(e);
	end
	
	
	rule "Device-security-state-00002"
	no-loop true
	salience 65000
	dialect "mvel"
	when
		v: VirusFoundEvent()
	then
		
		StatusGlobal.log("5.A new device security state has been identified: VIRUS FOUND, associated to event:"+v.getTimestamp());
		Rt2aeGlobal.deviceSecurityStateChange(v,"Virus", ThreatOntology.DATA_DESTRUCTION);
		//retract(v);
	end
	
	
	rule "Device-security-state-00003"
	no-loop true
	salience 65000
	dialect "mvel"
	when
		d: DeviceProtectionEvent(isPasswordProtected==false)
	then
		
		StatusGlobal.log("5.A new device security state has been identified: SCREEN LOCK DISABLED, associated to event:"+d.getTimestamp());
		Rt2aeGlobal.deviceSecurityStateChange(d,"Screen Lock Disabled", ThreatOntology.PHYSICAL_ACCESS);
		
		Clue clue = Rt2aeGlobal.composeClue(d,"Screen Lock Disabled", ThreatOntology.DATA_DESTRUCTION);
		StatusGlobal.log("CREATED CLUE:"+clue.getTimestamp());
		clue.setUsername(d.getUsername());
		clue.setDeviceId(d.getDeviceId());

	end
	
	rule "Device-security-state-00004"
	no-loop true
	salience 65000
	dialect "mvel"
	when
		d: DeviceProtectionEvent(screenTimeoutInSeconds>60)
	then
		
		StatusGlobal.log("5.A new device security state has been identified: SCREEN TIMEOUT IS NOT ACCEPTABLE, associated to event:"+d.getTimestamp());
		Rt2aeGlobal.deviceSecurityStateChange(d,"Insufficient screen Look timeout", ThreatOntology.PHYSICAL_ACCESS);

	end
	
	rule "Clue-identification-000008"
	no-loop true
	salience 65000
	dialect "mvel"
	when
		e: EmailEvent()
		v: VirusFoundEvent(deviceId==e.deviceId)		
		//not Clue(name=="Virus",deviceId==e.deviceId)
	then
		
		StatusGlobal.log("3.A new clue has been identified, associated to event:"+e.getTimestamp());		
		StatusGlobal.log("Identifier:"+e.getTimestamp());
		Clue clue = Rt2aeGlobal.composeClue(e,"Virus", ThreatOntology.DATA_DESTRUCTION);
		StatusGlobal.log("CREATED CLUE:"+clue.getTimestamp());
		clue.setUsername(e.getUsername());
		clue.setDeviceId(e.getDeviceId());
		insert(clue);
	end

	// it should be related to save confidential file in monitored folder 

	
	rule "Clue-identification-000009"
	no-loop true
	salience 65000
	dialect "mvel"
	when
		e: FileObserverEvent(event=="save_asset")
		
	then
		StatusGlobal.log("3.A new clue has been identified, associated to event:"+e.getTimestamp());		
		StatusGlobal.log("Identifier:"+e.getTimestamp());
		Clue clue = Rt2aeGlobal.composeClue(e,"Attempt to save a file in a monitored folder", ThreatOntology.DATA_CORRUPTION);
		StatusGlobal.log("CREATED CLUE:"+clue.getTimestamp());
		clue.setUsername(e.getUsername());
		clue.setDeviceId(e.getDeviceId());
		insert(clue);
	end	
	
	rule "Clue-identification-0000010"
	no-loop true
	salience 65000
	dialect "mvel"
	when
		e: USBDeviceConnectedEvent()
	then
		
		StatusGlobal.log("3.A new clue has been identified, associated to event:"+e.getTimestamp());		
		StatusGlobal.log("Identifier:"+e.getTimestamp());
		Clue clue = Rt2aeGlobal.composeClue(e,"USB device connected", ThreatOntology.DATA_LEAKAGE);
		StatusGlobal.log("CREATED CLUE:"+clue.getTimestamp());
		clue.setUsername(e.getUsername());
		clue.setDeviceId(e.getDeviceId());
		insert(clue);
	end


	rule "Clue-identification-0000011"
	no-loop true
	salience 65000
	dialect "java"
	when
		e: AddNoteEvent()

	then
		StatusGlobal.log("3.A new clue has been identified, associated to event:"+e.getTimestamp());		
		StatusGlobal.log("Identifier:"+e.getTimestamp());
		Clue clue = Rt2aeGlobal.composeClue(e,"Emas Add Note", ThreatOntology.DATA_LEAKAGE);
		StatusGlobal.log("CREATED CLUE:"+clue.getTimestamp());
		clue.setUsername(e.getUsername());
		clue.setDeviceId(e.getDeviceId());
		insert(clue);
	end


	rule "Clue-identification-0000012"
	no-loop true
	salience 65000	
	dialect "java"
	when
		e: PasswordEvent()


	then
		StatusGlobal.log("3.A new clue has been identified, associated to event:"+e.getTimestamp());		
		StatusGlobal.log("Identifier:"+e.getTimestamp());
		Clue clue = Rt2aeGlobal.composeClue(e,"User entered password", ThreatOntology.DATA_LEAKAGE);
		StatusGlobal.log("CREATED CLUE:"+clue.getTimestamp());
		clue.setUsername(e.getUsername());
		clue.setDeviceId(e.getDeviceId());
		insert(clue);
		
	end	

	rule "Clue-identification-0000013"
	no-loop true
	salience 65000		
	dialect "java"
	when
		e: FileObserverEvent(event=="open_asset", path matches ".*Swe.*", username=="muses")
		e1: LocationEvent(isWithinZone matches ".*1.*")

	then
		StatusGlobal.log("3.A new clue has been identified, associated to event:"+e.getTimestamp());		
		StatusGlobal.log("Identifier:"+e.getTimestamp());
		Clue clue = Rt2aeGlobal.composeClue(e,"Open asset in restricted area", ThreatOntology.DATA_LEAKAGE);
		StatusGlobal.log("CREATED CLUE:"+clue.getTimestamp());
		clue.setUsername(e.getUsername());
		clue.setDeviceId(e.getDeviceId());
		insert(clue);
		
	end	

	rule "Clue-identification-0000014"
	no-loop true
	salience 65000		
	dialect "java"
	when
		e: ChangeSecurityPropertyEvent(isTrustedAntivirusInstalled==false)


	then
		StatusGlobal.log("3.A new clue has been identified, associated to event:"+e.getTimestamp());		
		StatusGlobal.log("Identifier:"+e.getTimestamp());
		Clue clue = Rt2aeGlobal.composeClue(e,"Antivirus not running", ThreatOntology.DATA_LEAKAGE);
		StatusGlobal.log("CREATED CLUE:"+clue.getTimestamp());
		clue.setUsername(e.getUsername());
		clue.setDeviceId(e.getDeviceId());
		insert(clue);
		
	end	

	rule "Clue-identification-0000015"
	no-loop true
	salience 65000		
	dialect "java"
	when
		e: ChangeSecurityPropertyEvent(isRooted==true)


	then
		StatusGlobal.log("3.A new clue has been identified, associated to event:"+e.getTimestamp());		
		StatusGlobal.log("Identifier:"+e.getTimestamp());
		Clue clue = Rt2aeGlobal.composeClue(e,"Rooted device", ThreatOntology.DATA_LEAKAGE);
		StatusGlobal.log("CREATED CLUE:"+clue.getTimestamp());
		clue.setUsername(e.getUsername());
		clue.setDeviceId(e.getDeviceId());
		insert(clue);
		
	end		


