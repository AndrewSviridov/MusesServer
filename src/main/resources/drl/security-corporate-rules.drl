package MusesDrl


global eu.musesproject.server.eventprocessor.correlator.global.StatusGlobal StatusGlobal
global eu.musesproject.server.eventprocessor.correlator.global.Rt2aeGlobal Rt2aeGlobal

import eu.musesproject.server.eventprocessor.correlator.model.owl.AccessRequest
import eu.musesproject.server.eventprocessor.correlator.model.owl.AppObserverEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.EmailEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.Event
import eu.musesproject.server.eventprocessor.correlator.model.owl.FileObserverEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.OpenFileEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.ConnectivityEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.UserBehaviorEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.VirusFoundEvent
import eu.musesproject.server.eventprocessor.util.Constants
import java.util.ArrayList
import java.util.Date
import java.util.StringTokenizer

declare Event
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare AppObserverEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare AccessRequest
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare FileObserverEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare OpenFileEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare EmailEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare VirusFoundEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare ConnectivityEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare UserBehaviorEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

rule "Rule firing"
	no-loop true
	dialect "mvel"
	when
		e: Event()
	then
		StatusGlobal.log("-------------------------------------------------------------------------");
		StatusGlobal.setStatus(Constants.STARTED);
		StatusGlobal.log("Rule firing correctly working!");
		StatusGlobal.log("User:"+e.getUsername()+" Device:"+e.getDeviceId());
		//int id = Rt2aeGlobal.sendDefaultDevicePolicy(e);

	end

rule "AccessRequest Detection open asset type sensitive"
	no-loop true
	dialect "mvel"
	when
		e: FileObserverEvent(event=="open_asset", resourceType=="sensitive")
		conn: ConnectivityEvent(wifiConnected==true,wifiEnabled==true) //demo
	then
		StatusGlobal.log("1.1.A new AccessRequest has been detected: FileObserverEvent. Type open");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		int id = Rt2aeGlobal.composeAccessRequest(e,conn,"DECIDE");
		//int id = Rt2aeGlobal.decide(e,conn);
		//GAP (we associate the access requests by id)
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		StatusGlobal.log("AccessRequest Detection open asset type sensitive:"+e.getEvent() + " " + e.getTimestamp());
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);
		retract(e);
		//retract(conn);
	end
	
	rule "AccessRequest Detection open asset type insensitive"
	no-loop true
	dialect "mvel"
	when
		e: FileObserverEvent(event=="open_asset", resourceType=="insensitive")
		conn: ConnectivityEvent(wifiConnected==true,wifiEnabled==true) //demo
	then
		StatusGlobal.log("1.2.A new AccessRequest has been detected: FileObserverEvent. Type open");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		int id = Rt2aeGlobal.composeAccessRequest(e,conn,"ALLOW");
		//int id = Rt2aeGlobal.allow(e,conn);
		//GAP (we associate the access requests by id)
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		StatusGlobal.log("AccessRequest Detection open asset type insensitive:"+e.getEvent() + " " + e.getTimestamp());
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);
		retract(e);
		//retract(conn);
	end
	
	rule "AccessRequest Detection open type"
	no-loop true
	dialect "mvel"
	when
		e: FileObserverEvent(event=="open")
		conn: ConnectivityEvent(wifiConnected==true,wifiEnabled==true) //demo
	then
		StatusGlobal.log("1.3.A new AccessRequest has been detected: FileObserverEvent. Type open");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		int id = Rt2aeGlobal.composeAccessRequest(e,conn,"DECIDE");
		//int id = Rt2aeGlobal.decide(e,conn);
		//GAP (we associate the access requests by id)
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		StatusGlobal.log("AccessRequest Detection open type:"+e.getEvent() + " " + e.getTimestamp());
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);
		retract(e);
	end
	
//TODO Changes for System test	
rule "AccessRequest ClientServer Connectivity"
	no-loop true
	dialect "mvel"
	when
		e: FileObserverEvent(event=="post")
	then
		StatusGlobal.log("1.4.A new AccessRequest has been detected: FileObserverEvent. Type post");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		int id = Rt2aeGlobal.composeAccessRequest(e);
		//GAP (we associate the access requests by id)
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);

	end
	
rule "AccessRequest Detection access type"
	no-loop true
	dialect "mvel"
	when
		e: FileObserverEvent(event=="access")
	then
		StatusGlobal.log("1.5.A new AccessRequest has been detected: FileObserverEvent. Type access");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		int id = Rt2aeGlobal.composeAccessRequest(e);
		//GAP (we associate the access requests by id)
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);

	end	
	

	
rule "Connectivity"
	no-loop true
	dialect "mvel"
	when
		e: ConnectivityEvent()
	then
		
		StatusGlobal.log("1.A new ConnectivityEvent has been detected");		

	end
	
rule "Blacklist app 00001"
	no-loop true
	dialect "mvel"
	when
		e: AppObserverEvent(name=="Gmail")
	then
		StatusGlobal.log("A blacklisted app has been detected: AppObserverEvent.");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		int id = Rt2aeGlobal.composeAccessRequest(e,"Action denied: This is a blacklisted application","DENY");
		//int id = Rt2aeGlobal.deny(e,"Action denied: This is a blacklisted application");
		//GAP (we associate the access requests by id)
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);
		retract(e);
	end
	
	rule "Not Blacklist app 00001"
	no-loop true
	dialect "mvel"
	when
		e: AppObserverEvent(name!="Gmail")
	then
		StatusGlobal.log("A blacklisted app has been detected: AppObserverEvent.");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		int id = Rt2aeGlobal.composeAccessRequest(e,"","ALLOW");
		//int id = Rt2aeGlobal.allow(e);
		//GAP (we associate the access requests by id)
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		StatusGlobal.log("Not Blacklist app:"+e.getEvent() + " " + e.getTimestamp());
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);
		retract(e);
	end
	
	rule "User Behavior"
	no-loop true
	dialect "mvel"
	when
		u:UserBehaviorEvent()
	then
		StatusGlobal.log("USER BEHAVIOR DETECTED:"+u.getAction());
		Rt2aeGlobal.notifyUserBehavior(u);
	end	


	rule "AccessRequest Email without Attachments"
	no-loop true
	dialect "mvel"
	when
		e:EmailEvent(numberAttachments==0)
	then
		StatusGlobal.log("EMAIL DETECTED:"+e.getSubject());
		int id = Rt2aeGlobal.composeAccessRequest(e,"","ALLOW");
	end	
	
	rule "AccessRequest Email with Attachments"
	no-loop true
	dialect "mvel"
	when
		e:EmailEvent(numberAttachments>0)
	then
		StatusGlobal.log("EMAIL DETECTED:"+e.getSubject());
		int id = Rt2aeGlobal.composeAccessRequest(e,"","DECIDE");
	end	
