package MusesDrl


global eu.musesproject.server.eventprocessor.correlator.global.StatusGlobal StatusGlobal
global eu.musesproject.server.eventprocessor.correlator.global.Rt2aeGlobal Rt2aeGlobal

import eu.musesproject.server.eventprocessor.correlator.model.owl.AccessRequest
import eu.musesproject.server.eventprocessor.correlator.model.owl.AppObserverEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.EmailEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.Event
import eu.musesproject.server.eventprocessor.correlator.model.owl.FileObserverEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.OpenFileEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.ConnectivityEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.UserBehaviorEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.VirusFoundEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.ChangeSecurityPropertyEvent
import eu.musesproject.server.eventprocessor.correlator.model.owl.DeviceProtectionEvent
import eu.musesproject.server.eventprocessor.util.Constants
import java.util.ArrayList
import java.util.Date
import java.util.StringTokenizer

declare Event
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare AppObserverEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare AccessRequest
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare FileObserverEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare OpenFileEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare EmailEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare VirusFoundEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare ConnectivityEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare UserBehaviorEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end


declare ChangeSecurityPropertyEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

declare DeviceProtectionEvent
	@role( event )
	@timestamp ( event_date )
	@expires (1m)
end

function boolean requiredApp(String name){
	boolean result = false;
	if (name.contains("com.avast.android.mobilesecurity")){
		result = true;
	}	

	return result;
}

rule "Rule firing"
	no-loop true
	dialect "mvel"
	when
		e: Event()
	then
		StatusGlobal.log("-------------------------------------------------------------------------");
		StatusGlobal.setStatus(Constants.STARTED);
		StatusGlobal.log("Rule firing correctly working!");
		StatusGlobal.log("User:"+e.getUsername()+" Device:"+e.getDeviceId());
		//int id = Rt2aeGlobal.sendDefaultDevicePolicy(e);

	end

rule "AccessRequest Detection open asset type sensitive unsecure wifi"
	no-loop true
	dialect "mvel"
	when
		e: FileObserverEvent(event=="open_asset", resourceType=="sensitive")
		//conn: ConnectivityEvent(wifiConnected==true,wifiEnabled==true) //demo
		conn: ConnectivityEvent(wifiConnected==true,wifiEnabled==true, wifiEncryption not matches ".*WPA2.*") 
	then
		StatusGlobal.log("1.1.A new AccessRequest has been detected: FileObserverEvent. Type open-unsecure wifi");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		int id = Rt2aeGlobal.composeAccessRequest(e,"You are trying to open a sensitive document but you are connected with an unsecured WiFi.\nOther people can observe what you transmit. Please, switch to a secure WiFi first.","ALLOW","<wifiencryption>"+conn.getWifiEncryption()+"</wifiencryption>");
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		StatusGlobal.log("AccessRequest Detection open asset type sensitive:"+e.getEvent() + " " + e.getTimestamp());
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);
		retract(e);
		
	end

rule "AccessRequest Detection open asset type sensitive secure wifi"
	no-loop true
	dialect "mvel"
	when
		e: FileObserverEvent(event=="open_asset", resourceType=="sensitive")
		//conn: ConnectivityEvent(wifiConnected==true,wifiEnabled==true) //demo
		conn: ConnectivityEvent(wifiConnected==true,wifiEnabled==true, wifiEncryption matches ".*WPA2.*") 
	then
		StatusGlobal.log("1.1.A new AccessRequest has been detected: FileObserverEvent. Type open");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		//int id = Rt2aeGlobal.composeAccessRequest(e,conn,"DECIDE", "wifiencryption!=WPA2");
		//int id = Rt2aeGlobal.composeAccessRequest(e,"Action denied: This is a sensitive asset","ALLOW","<resourceType>sensitive</resourceType>");
		int id = Rt2aeGlobal.composeAccessRequest(e,"Action denied: This is a sensitive asset","ALLOW","<wifiencryption>"+conn.getWifiEncryption()+"</wifiencryption>");
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		StatusGlobal.log("AccessRequest Detection open asset type sensitive:"+e.getEvent() + " " + e.getTimestamp());
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);
		retract(e);
		
	end
	
	
	
	rule "AccessRequest Detection open asset type insensitive"
	no-loop true
	dialect "mvel"
	when
		e: FileObserverEvent(event=="open_asset", resourceType=="insensitive")
		conn: ConnectivityEvent(wifiConnected==true,wifiEnabled==true) //demo
	then
		StatusGlobal.log("1.2.A new AccessRequest has been detected: FileObserverEvent. Type open");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		//int id = Rt2aeGlobal.composeAccessRequest(e,conn,"ALLOW", "any");
		int id = Rt2aeGlobal.composeAccessRequest(e,"Action allowed, this is a public file","ALLOW","<resourceType>"+e.getResourceType()+"</resourceType>");
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		StatusGlobal.log("AccessRequest Detection open asset type insensitive:"+e.getEvent() + " " + e.getTimestamp());
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);
		retract(e);
		//retract(conn);
	end
	
	rule "AccessRequest Detection open type"
	no-loop true
	dialect "mvel"
	when
		e: FileObserverEvent(event=="open")
		conn: ConnectivityEvent(wifiConnected==true,wifiEnabled==true) //demo
	then
		StatusGlobal.log("1.3.A new AccessRequest has been detected: FileObserverEvent. Type open");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		int id = Rt2aeGlobal.composeAccessRequest(e,conn,"DECIDE", "wifiencryption!=WPA2");		
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		StatusGlobal.log("AccessRequest Detection open type:"+e.getEvent() + " " + e.getTimestamp());
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);
		retract(e);
	end
	
//TODO Changes for System test	
rule "AccessRequest ClientServer Connectivity"
	no-loop true
	dialect "mvel"
	when
		e: FileObserverEvent(event=="post")
	then
		StatusGlobal.log("1.4.A new AccessRequest has been detected: FileObserverEvent. Type post");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		int id = Rt2aeGlobal.composeAccessRequest(e);
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);

	end
	
rule "AccessRequest Detection access type"
	no-loop true
	dialect "mvel"
	when
		e: FileObserverEvent(event=="access")
	then
		StatusGlobal.log("1.5.A new AccessRequest has been detected: FileObserverEvent. Type access");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		int id = Rt2aeGlobal.composeAccessRequest(e);
		//GAP (we associate the access requests by id)
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);

	end	
	

	
rule "Connectivity"
	no-loop true
	dialect "mvel"
	when
		e: ConnectivityEvent()
	then
		
		StatusGlobal.log("1.A new ConnectivityEvent has been detected");		

	end
	
rule "Blacklist app 00001"
	no-loop true
	dialect "mvel"
	enabled false
	when
		e: AppObserverEvent(name=="Gmail",event=="open_application")
	then
		StatusGlobal.log("A blacklisted app has been detected: AppObserverEvent.");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		//int id = Rt2aeGlobal.composeAccessRequest(e,"Action denied: This is a blacklisted application","DENY","<appname>Gmail</appname>");
		int id = Rt2aeGlobal.composeAccessRequest(e,"You are trying to open an application which is considered harmful.\nOther people can gain control over your device.","DENY","<appname>Gmail</appname>");
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);
		retract(e);
		
	end
	
	rule "Not Blacklist app 00001"
	no-loop true
	dialect "mvel"
	when
		e: AppObserverEvent(name!="Gmail",event=="open_application")
	then
		StatusGlobal.log("A blacklisted app has been detected: AppObserverEvent.");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		int id = Rt2aeGlobal.composeAccessRequest(e,"","ALLOW", "<appname>"+e.getName()+"</appname>");
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		StatusGlobal.log("Not Blacklist app:"+e.getEvent() + " " + e.getTimestamp());
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);
		retract(e);
	end
	

	
	rule "Blacklist app 00002"
	no-loop true
	dialect "mvel"
	when
		e: AppObserverEvent(name=="Wifi Analyzer",event=="open_application")
	then
		StatusGlobal.log("A blacklisted app has been detected: AppObserverEvent.");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		int id = Rt2aeGlobal.composeAccessRequest(e,"You are trying to open an application which is considered harmful.\nOther people can gain control over your device.","DENY","<appname>Wifi Analyzer</appname>");
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);
		retract(e);
		
	end
	
	rule "User Behavior"
	no-loop true
	dialect "mvel"
	when
		u:UserBehaviorEvent()
	then
		StatusGlobal.log("USER BEHAVIOR DETECTED:"+u.getAction());
		Rt2aeGlobal.notifyUserBehavior(u);
	end	


	rule "AccessRequest Email without Attachments"
	no-loop true
	dialect "mvel"
	when
		e:EmailEvent(numberAttachments==0)
	then
		StatusGlobal.log("EMAIL DETECTED:"+e.getSubject());
		int id = Rt2aeGlobal.composeAccessRequest(e,"Email action allowed","ALLOW", "<noAttachments>0</noAttachments>");
	end	
	
	rule "AccessRequest Email with Attachments"
	no-loop true
	dialect "mvel"
	when
		v: VirusFoundEvent()
		e:EmailEvent(numberAttachments>0)
	then
		StatusGlobal.log("EMAIL DETECTED:"+e.getSubject());
		//int id = Rt2aeGlobal.composeAccessRequest(e,"You are not allowed to send an email with any attachments since you have a virus","DENY", "<noAttachments>1</noAttachments>");
		int id = Rt2aeGlobal.composeAccessRequest(e,"You have a virus and you want to send an attachment via E-mail.\nThis can cause the loss of the attachment. Remove the virus first.","DENY", "<noAttachments>1</noAttachments>");
	end	
	
	
	rule "AccessRequest Change Security Property-password-protected"
	no-loop true
	dialect "mvel"
	when
		e: ChangeSecurityPropertyEvent(isPasswordProtected==false)
		//d: DeviceProtectionEvent(isPasswordProtected==false)
	then
		StatusGlobal.log("CHANGE SECURITY PROPERTY 1.4.A new AccessRequest has been detected: ChangeSecurityPropertyEvent.");
		//int id = Rt2aeGlobal.composeAccessRequest(e,"The screen lock is required by the security policies","DENY", "<isPasswordProtected>false</isPasswordProtected>");
		int id = Rt2aeGlobal.composeAccessRequest(e,"You are trying to disable screen lock, which is an important security mechanism.\n This can cause in a loss of your data.","DENY", "<isPasswordProtected>false</isPasswordProtected>");

	end
	
	rule "AccessRequest Change Security Property-screen-timeout"
	no-loop true
	dialect "mvel"
	when
		e: ChangeSecurityPropertyEvent()
		d: DeviceProtectionEvent(screenTimeoutInSeconds<60)
	then
		StatusGlobal.log("CHANGE SECURITY PROPERTY 1.4.A new AccessRequest has been detected: ChangeSecurityPropertyEvent.");
		int id = Rt2aeGlobal.composeAccessRequest(e,"","DENY", "<screenTimeoutInSeconds>"+d.getScreenTimeoutInSeconds()+"</screenTimeoutInSeconds>");

	end
	
	rule "AccessRequest Disable Accessibility"
	no-loop true
	dialect "mvel"
	when
		e: ChangeSecurityPropertyEvent(accessibilityEnabled==false)
	then
		StatusGlobal.log("CHANGE SECURITY PROPERTY 1.4.A new AccessRequest has been detected: ChangeSecurityPropertyEvent. ACCESIBILITY DISABLED");
		//int id = Rt2aeGlobal.composeAccessRequest(e,"The screen lock is required by the security policies","DENY", "<isPasswordProtected>false</isPasswordProtected>");
		int id = Rt2aeGlobal.composeAccessRequest(e,"You are trying to disable accessibility, which is an important security mechanism for MUSES.\n This can cause the device having a lower level of security.","DENY", "<accessibilityEnabled>false</accessibilityEnabled>");

	end
	
	rule "ACL6 door_1"
	no-loop true
	dialect "mvel"
	when
		e: FileObserverEvent(event=="open_asset", path=="/sdcard/Swe/door_1", username=="muses2")
	then
		StatusGlobal.log("1.1.A new AccessRequest has been detected: FileObserverEvent. Type open");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		int id = Rt2aeGlobal.composeAccessRequest(e,null,"DENY", "<username>"+e.getUsername()+"</username>");
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		StatusGlobal.log("AccessRequest Detection open asset type sensitive:"+e.getEvent() + " " + e.getTimestamp());
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);
		retract(e);
		
	end
	
	rule "ACL6 door_1 user muses"
	no-loop true
	dialect "mvel"
	when
		e: FileObserverEvent(event=="open_asset", path=="/sdcard/Swe/door_1", username=="muses")
	then
		StatusGlobal.log("1.1.A new AccessRequest has been detected: FileObserverEvent. Type open");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		int id = Rt2aeGlobal.composeAccessRequest(e,null,"ALLOW", "<username>"+e.getUsername()+"</username>");
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		StatusGlobal.log("AccessRequest Detection open asset type sensitive:"+e.getEvent() + " " + e.getTimestamp());
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);
		retract(e);
		
	end

	
	rule "Required application list"
	no-loop true
	dialect "mvel"
	when
		//e: AppObserverEvent(eval(requiredApp(this.name)),event=="uninstall")
		e: AppObserverEvent(eval(requiredApp(this.appPackage)),event=="uninstall")
	then
		StatusGlobal.log("A required application is trying to get uninstalled.");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		//int id = Rt2aeGlobal.composeAccessRequest(e,"The Anti virus application is required by the security policies","DENY","<appname>"+e.getName()+"</appname>");
		//int id = Rt2aeGlobal.composeAccessRequest(e,"The Anti virus application is required by the security policies","DENY","<packagename>"+e.getAppPackage()+"</packagename>");
		int id = Rt2aeGlobal.composeAccessRequest(e,"You are trying to uninstall an application that is important for information security. \n Uninstalling the application lowers overall information security.s","DENY","<packagename>"+e.getAppPackage()+"</packagename>");
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);
		retract(e);
		
	end
	
	rule "AccessRequest Detection Save File in a monitored folder"
	no-loop true
	dialect "mvel"
	when
		e: FileObserverEvent(event=="save_asset")
		
	then
		StatusGlobal.log("1.3.A new AccessRequest has been detected: FileObserverEvent. Type Save File in a Monitored folder");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		//int id = Rt2aeGlobal.composeAccessRequest(e,"Up to the user: Confidential documents shall only be saved on a device if really needed.","ALLOW","<path>"+e.getPath()+"</path>");
		int id = Rt2aeGlobal.composeAccessRequest(e,"You want to save a confidential document on your device.\nIf you loose your device, you loose the document too.","ALLOW","<path>"+e.getPath()+"</path>");		
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		StatusGlobal.log("AccessRequest Detection save file type:"+e.getEvent() + " " + e.getTimestamp());
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);
		retract(e);
	end
	
	
	rule "AccessRequest Detection Open File in a monitored folder"
	no-loop true
	dialect "mvel"
	when
		e: FileObserverEvent(event=="open_asset", path matches ".*Swe.*", username=="muses")
	then
		StatusGlobal.log("1.3.A new AccessRequest has been detected: FileObserverEvent. Type Open File in a Monitored folder");
		Rt2aeGlobal.setStatus(Constants.STARTED);
		//int id = Rt2aeGlobal.composeAccessRequest(e,"This asset is confidential and it shall not be opened, according to your current role.","DENY","<path>"+e.getPath()+"</path>");
		int id = Rt2aeGlobal.composeAccessRequest(e,"You want to access a file, but you do not have the permission to do so.\nFor reasons of information security, you cannot access this file.","DENY","<path>"+e.getPath()+"</path>");		
		AccessRequest request = new AccessRequest();
		StatusGlobal.log("**********"+id);
		StatusGlobal.log("AccessRequest Detection open file type:"+e.getEvent() + " " + e.getTimestamp());
		request.setId(id);
		request.setEvent_date(new Date(System.currentTimeMillis()));
		insert(request);
		retract(e);
	end
